Exercício 1

SELECT id_VENDEDOR, Nome, Salario FROM Vendedores WHERE Inativo = FALSE ORDER BY nome ASC;

Exercício 2

SELECT ID_VENDEDOR, NOME, SALARIO FROM VENDEDORES
WHERE SALARIO > (SELECT AVG(SALARIO) FROM VENDEDORES)
ORDER BY SALARIO DESC;

Exercício 3

SELECT C.ID_CLIENTE, C.RAZAO_SOCIAL, COALESCE(SUM(P.VALOR_TOTAL),0)AS TOTAL FROM Clientes C
LEFT JOIN PEDIDO P ON P.ID_CLIENTE = C.ID_CLIENTE
GROUP BY C.ID_CLIENTE, C.RAZAO_SOCIAL
ORDER BY TOTAL DESC;

Exercício 4

SELECT ID_PEDIDO AS ID, VALOR_TOTAL AS VALOR, DATA_EMISSAO AS DATA,
   CASE 
       WHEN DATA_CANCELAMENTO IS NOT NULL THEN 'CANCELADO'
       WHEN DATA_FATURAMENTO IS NOT NULL THEN 'FATURADO'
       ELSE 'PENDENTE'
   END AS SITUACAO
FROM PEDIDO
ORDER BY ID;

Exercício 5 

SELECT 
    IP.ID_PRODUTO,
    SUM(IP.QUANTIDADE) AS QUANTIDADE_VENDIDA,
    SUM(IP.PRECO_PRATICADO * IP.QUANTIDADE) AS TOTAL_VENDIDO,
    COUNT(DISTINCT IP.ID_PEDIDO) AS PEDIDOS,
    COUNT(DISTINCT P.ID_CLIENTE) AS CLIENTES
FROM ITENS_PEDIDO IP
JOIN PEDIDO P ON IP.ID_PEDIDO = P.ID_PEDIDO
GROUP BY IP.ID_PRODUTO
ORDER BY QUANTIDADE_VENDIDA DESC, TOTAL_VENDIDO DESC
LIMIT 1;